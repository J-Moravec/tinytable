% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_tt.R
\name{format_tt}
\alias{format_tt}
\title{Format columns of a data frame}
\usage{
format_tt(
  x = NULL,
  j = NULL,
  output = NULL,
  digits = NULL,
  num_fmt = "significant",
  num_zero = TRUE,
  num_mark_big = "",
  num_mark_dec = getOption("OutDec", default = "."),
  url = FALSE,
  date = function(column) format(column, "\%Y-\%m-\%d"),
  bool = function(column) tools::toTitleCase(tolower(column)),
  other = identity
)
}
\arguments{
\item{x}{A data frame to be formatted.}

\item{j}{Column indices where the styling should be applied. Can be a single value, a vector, or a Perl-style regular expression applied to column names of the original data frame. If \code{colspan} is used, \code{j} must be of length 1.}

\item{output}{The format of the output table. Can be "html", "latex", or "markdown". If NULL, the format is automatically detected in Quarto or Rmarkdown documents.}

\item{digits}{Number of significant digits or decimal places.}

\item{num_fmt}{The format for numeric values; one of 'significant', 'decimal', or 'scientific'.}

\item{num_zero}{Logical; if TRUE, trailing zeros are kept in "decimal" format (but not in "significant" format).}

\item{num_mark_big}{Character to use as a thousands separator.}

\item{num_mark_dec}{Decimal mark character. Default is the global option 'OutDec'.}

\item{url}{Logical; if TRUE, treats the column as a URL.}

\item{date}{A function to format Date columns. Defaults to ISO format.}

\item{bool}{A function to format logical columns. Defaults to title case.}

\item{other}{A function to format columns of other types. Defaults to identity (no formatting).}
}
\value{
A data frame with formatted columns.
}
\description{
This function formats the columns of a data frame based on the column type (logical, date, numeric).
It allows various formatting options like significant digits, decimal points, and scientific notation.
It also includes custom formatting for date and boolean values.
}
\examples{
# Example usage
data_frame <- data.frame(
  logical_col = c(TRUE, FALSE, TRUE),
  date_col = as.Date(c('2020-01-01', '2021-02-02', '2022-03-03')),
  numeric_col = c(12345.67, 8901.23, 4567.89)
)
formatted_data_frame <- format_tt(data_frame)

}

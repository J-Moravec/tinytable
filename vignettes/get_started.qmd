---
title: "Get started"
---


`tinytable` is easy to use:

```{r}
pkgload::load_all()
# library(tinytable)

x <- mtcars[1:4, 1:5]

tinytable(x)
```


## Captions and cross-references

```{r}
tinytable(x, caption = "Data about cars.")
```

TODO: Cross-references


## Style

Customization options include text alignment, color, font, and background.

- `style_cell()`: Styles individual cells.
- `style_row()`: Styles entire rows.
- `style_column()`: Styles columns.

These functions all share the same set of arguments:

* `i` row numbers: integer vector or `NULL` to style all rows.
* `j` column numbers: integer vector or `NULL` to style all columns.
* `color`: text color
* `background`: background color
* `bold`: bold text
* `italic`: bold text
* `align`: horizontal alignment
* `latex = latexOptions()`: `tabularray` settings for deep customization.
* `html = htmlOptions()`: `Bootstrap` settings for deep customization.


### `style_cell()`

To style individual cells, we use the `style_cell()`  function. The first two arguments (`i` and `j`) identify the positions of the cells of interest, by row and column numbers respectively. To style a cell in the 2nd row and 3rd column, we can do:

```{r}
tinytable(x) |>
  style_cell(
    i = 2,
    j = 3,
    background = "black",
    color = "white",
    bold = TRUE,
    italic = TRUE)
```

The `i` and `j` accept vectors of integers to modify several cells at once:

```{r}
tinytable(x) |> style_cell(2, c(1, 3), background = "olive")
```

We can style all cells by omitting the `i` and `j` columns altogether:

```{r}
tinytable(x) |> style_cell(color = "blue")
```



### `style_row()`


```{r}
tinytable(x) |>
  style_row(1:2, background = "black", color = "white")
```

```{r}
tinytable(x) |>
  style_row(background = "lightblue")
```


### `style_column()`

```{r}
tinytable(x) |>
  style_column(align = "c")
```

```{r}
tinytable(x) |>
  style_column(2, background = "black", color = "white")
```



## Headers

The header can be omitted from the table by deleting the column names in the `x` data frame:

```{r}
k <- x
colnames(k) <- NULL
tinytable(k)
```


## More customization

### LaTeX with `tabularray`

### HTML with `Bootstrap`
